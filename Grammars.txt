expression = simple_expression [ relational_operator simple_expression ]
simple_expression = term { addition_operator term }
term = factor { multiplication_operator factor }
factor = NUMBER | STRING | NIL | variable | function_designator | '(' expression ')' 
multiplication_operator = '*' | '/' | DIV | MOD | AND 
addition_operator = '+' | '-' | OR 
relational_operator= '=' | '<>' | '<' | '<=' | '>' | '>=' 

function_designator = FUNCTION_NAME [ actual_parameter_list ]
actual_parameter_list = '(' actual_parameter { ',' actual_parameter } ')'
actual_parameter = expression | PROCEDURE_NAME | FUNCTION_NAME | variable

variable = entire_variable | component_variable 
entire_variable = VARIABLE_NAME | FIELD_NAME
component_variable = indexed_variable | field_designator
indexed_variable = variable '[' expression_list ']' 
field_designator = variable '.' FIELD_NAME
expression_list = expression { ',' expression }

statement = simple_statement | structured_statement 
simple_statement = [ assignment_statement | procedure_statement ]
assignment_statement = ( variable | FUNCTION_NAME ) ':=' expression 
procedure_statement = PROCEDURE_NAME [ actual_parameter_list ]

structured_statement = compound_statement | repetitive_statement | conditional_statement 
compound_statement = BEGIN statement_sequence END
statement_sequence = statement { ';' statement }
repetitive_statement = while_statement | repeat_statement | for_statement
while_statement = WHILE expression DO statement
repeat_statement = REPEAT statement_sequence UNTIL expression
for_statement = FOR VARIABLE_NAME ':=' expression ( TO | DOWNTO ) expression DO statement
conditional_statement = IF expression THEN statement [ ELSE statement ] 
